{"version":3,"sources":["bundle.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","angular","config","$locationProvider","$routeProvider","hashPrefix","otherwise","redirectTo","./components/version/interpolate-filter.js","./components/version/version-directive.js","./components/version/version.js","./view1/view1","./view2/template/view2.html","./view2/view2","2","filter","version","text","String","replace","3","directive","scope","elm","attrs","4","value","5","run","$templateCache","put","6","when","templateUrl","controller","./template/view1.html","lodash","7","8","9","global","baseCompareAscending","other","valIsNull","valIsUndef","undefined","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","order","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingChar","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","actions","this","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","MapCache","__data__","SetCache","values","data","hash","nativeCreate","set","Set","push","cacheIndexOf","cache","isObject","has","arrayConcat","othIndex","othLength","Array","arrayCopy","source","arrayEach","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arraySome","arraySum","assignOwnDefaults","objectValue","sourceValue","key","assignWith","customizer","props","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArr","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","type","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","apply","baseDifference","getIndexOf","isCommon","LARGE_ARRAY_SIZE","createCache","valuesLength","outer","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","start","end","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","splice","baseRandom","min","max","nativeFloor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","iteratees","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","baseWrapperValue","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","nativeMin","MAX_ARRAY_INDEX","arguments","bufferClone","buffer","ArrayBuffer","byteLength","Uint8Array","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","prototype","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","fn","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","nativeCeil","slice","createPartialWrapper","createRound","methodName","Math","number","precision","pow","createSortedIndex","mergeData","baseSetData","arrLength","arrValue","othValue","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","objProps","objLength","skipCtor","objCtor","constructor","othCtor","realNames","otherFunc","target","pairs","getNative","isNative","getView","transforms","size","input","Object","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","merge","pickByArray","pickByCallback","oldArray","shimKeys","allowIndexes","rePropName","match","quote","reEscapeChar","clone","drop","dropRight","first","rest","uniq","isSorted","unzip","group","unzipWith","zipObject","chain","interceptor","every","includes","isString","map","sample","toArray","rand","some","before","temp","debounce","options","complete","isCalled","id","clearTimeout","maxTimeoutId","timeoutId","trailingCall","lastCalled","now","delayed","remaining","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadingCall","cancel","memoize","resolver","memoized","get","Cache","otherArgs","gt","propertyIsEnumerable","isEqual","isError","reIsNative","fnToString","reIsHostCtor","isNumber","isRegExp","typedArrayTags","lt","functions","isProto","skipIndexes","reLatin1","reComboMark","trim","pattern","reWords","matches","mixin","isObj","methodNames","noop","_","defaults","pick","contextProps","Date","Function","Number","RegExp","arrayProto","objectProto","stringProto","toString","idCounter","oldDash","parseFloat","WeakMap","ceil","floor","nativeIsArray","isFinite","nativeKeys","nativeNow","nativeParseInt","parseInt","random","NEGATIVE_INFINITY","MAX_ARRAY_LENGTH","metaMap","support","templateSettings","escape","reEscape","evaluate","reEvaluate","interpolate","reInterpolate","variable","imports","baseEachRight","count","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","caches","pullAt","sortedIndex","sortedLastIndex","union","without","zip","zipWith","wrapperConcat","at","countBy","find","findLast","forEach","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduce","reduceRight","sortByAll","getTime","bind","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","modArgs","partial","partialRight","rearg","assign","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","omit","camelCase","word","toLowerCase","toUpperCase","kebabCase","padLeft","padRight","snakeCase","startCase","attempt","method","methodOf","round","add","after","chunk","compact","constant","create","properties","dropRightWhile","dropWhile","fill","flatten","flattenDeep","initial","invert","multiValue","matchesProperty","negate","once","pluck","propertyOf","pull","range","step","reject","remove","nested","shuffle","sortBy","sortByOrder","spread","take","takeRight","takeRightWhile","takeWhile","tap","throttle","times","transform","valuesIn","where","wrap","xor","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","augend","addend","capitalize","cloneDeep","endsWith","position","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","findWhere","defaultValue","gte","inRange","isBoolean","isDate","isElement","nodeType","isEmpty","isMatch","isNaN","isNull","isUndefined","lastIndexOf","lte","noConflict","pad","radix","reHasHexPrefix","floating","noMin","noMax","startsWith","sum","template","otherOptions","settings","isEscaping","isEvaluating","importsKeys","importsValues","reNoMatch","reDelimiters","reEsTemplate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","unescape","reHasEscapedHtml","reEscapedHtml","uniqueId","prefix","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","filtered","reverse","isFilter","LAZY_MAP_FLAG","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","dir","isRight","view","iterLength","takeCount","iterIndex","LAZY_FILTER_FLAG","commit","concat","parent","wrapped","toJSON","valueOf","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","0","A","B","C","D","E","F","b","c","d","v","x","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","window","moduleExports","define","amd"],"mappings":"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","file":"bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\r\n\r\nrequire('./view1/view1');\r\nrequire('./view2/view2');\r\nrequire('./components/version/version.js');\r\nrequire('./components/version/version-directive.js');\r\nrequire('./components/version/interpolate-filter.js');\r\n\r\n// Declare app level module which depends on views, and components\r\nangular.module('myApp', [\r\n  'ngRoute',\r\n  'myApp.view1',\r\n  'myApp.view2',\r\n  'myApp.version',\r\n  require(\"./view2/template/view2.html\")\r\n]).\r\nconfig(['$locationProvider', '$routeProvider', function($locationProvider, $routeProvider) {\r\n  $locationProvider.hashPrefix('!');\r\n\r\n  $routeProvider.otherwise({redirectTo: '/view1'});\r\n}]);\r\n\n},{\"./components/version/interpolate-filter.js\":2,\"./components/version/version-directive.js\":3,\"./components/version/version.js\":4,\"./view1/view1\":6,\"./view2/template/view2.html\":7,\"./view2/view2\":8}],2:[function(require,module,exports){\n'use strict';\r\n\r\nangular.module('myApp.version.interpolate-filter', [])\r\n\r\n.filter('interpolate', ['version', function(version) {\r\n  return function(text) {\r\n    return String(text).replace(/\\%VERSION\\%/mg, version);\r\n  };\r\n}]);\r\n\n},{}],3:[function(require,module,exports){\n'use strict';\r\n\r\nangular.module('myApp.version.version-directive', [])\r\n\r\n.directive('appVersion', ['version', function(version) {\r\n  return function(scope, elm, attrs) {\r\n    elm.text(version);\r\n  };\r\n}]);\r\n\n},{}],4:[function(require,module,exports){\n'use strict';\r\n\r\nangular.module('myApp.version', [\r\n  'myApp.version.interpolate-filter',\r\n  'myApp.version.version-directive'\r\n])\r\n\r\n.value('version', '0.1');\r\n\n},{}],5:[function(require,module,exports){\nvar ngModule = angular.module('view1.html', []);\nngModule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('view1.html',\n    '<p>This is the partial for view 1 :-).</p>\\n' +\n    '');\n}]);\n\nmodule.exports = \"view1.html\";\n},{}],6:[function(require,module,exports){\n'use strict';\r\nvar _ = require(\"lodash\");\r\n\r\n\r\nangular.module('myApp.view1', ['ngRoute',require(\"./template/view1.html\")])\r\n\r\n.config(['$routeProvider', function($routeProvider) {\r\n  $routeProvider.when('/view1', {\r\n    templateUrl: \"view1.html\",\r\n    controller: 'View1Ctrl'\r\n  });\r\n}])\r\n\r\n.controller('View1Ctrl', [function() {\r\n\r\n}]);\n},{\"./template/view1.html\":5,\"lodash\":9}],7:[function(require,module,exports){\nvar ngModule = angular.module('view2.html', []);\nngModule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('view2.html',\n    '<p>This is the partial for view 2.</p>\\n' +\n    '<p>\\n' +\n    '  Showing of \\'interpolate\\' filter:\\n' +\n    '  {{ \\'Current version is v%VERSION%.\\' | interpolate }}\\n' +\n    '</p>\\n' +\n    '');\n}]);\n\nmodule.exports = \"view2.html\";\n},{}],8:[function(require,module,exports){\n'use strict';\r\n\r\nangular.module('myApp.view2', ['ngRoute'])\r\n\r\n.config(['$routeProvider', function($routeProvider) {\r\n  $routeProvider.when('/view2', {\r\n    templateUrl: 'view2.html',\r\n    controller: 'View2Ctrl'\r\n  });\r\n}])\r\n\r\n.controller('View2Ctrl', [function() {\r\n\r\n}]);\n},{}],9:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}]},{},[1]);\n"]}